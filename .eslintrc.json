{
  "env": {
    "es2021": true,
    "node": true
  },
  "extends": [
    "standard-with-typescript",
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "plugins": [
    "import"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": [
      "./tsconfig.json"
    ]
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "semi": false,
        "singleQuote": true,
        "trailingComma": "es5",
        "endOfLine": "auto"
      }
    ],
    "max-params": [
      "error",
      7
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [
          "none",
          "all",
          "multiple",
          "single"
        ]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          [
            "builtin",
            "external"
          ],
          "internal",
          [
            "parent",
            "sibling",
            "index"
          ]
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "desc",
          "caseInsensitive": true
        }
      }
    ],
    "no-duplicate-imports": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": [
          "variable",
          "function",
          "method"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "typeLike",
          "enum",
          "class"
        ],
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": [
          "interface"
        ],
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "I"
        ]
      },
      {
        "selector": [
          "variable"
        ],
        "format": [
          "PascalCase"
        ],
        "types": [
          "boolean"
        ],
        "prefix": [
          "is",
          "are",
          "should",
          "has",
          "have",
          "can",
          "did",
          "will",
          "toBe"
        ]
      }
    ],
    "@typescript-eslint/no-extra-non-null-assertion": [
      "error",
      {
        "allowNullableAssertion": true
      }
    ],
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignoreArrayIndexes": true,
        "ignoreEnums": true,
        "ignore": [
          -1,
          1,
          0
        ],
        "ignoreDefaultValues": true,
        "ignoreNumericLiteralTypes": true,
        "ignoreReadonlyClassProperties": true,
        "ignoreTypeIndexes": true
      }
    ],
    "lines-between-class-members": [
      "error",
      {
        "enforce": [
          {
            "blankLine": "always",
            "prev": "method",
            "next": "method"
          },
          {
            "blankLine": "never",
            "prev": "field",
            "next": "field"
          },
          {
            "blankLine": "always",
            "prev": "field",
            "next": "method"
          }
        ]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}